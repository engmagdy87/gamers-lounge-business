@import "./variables.scss";

// Mixins

@mixin calc-difference-width($percentage, $number) {
  /* Firefox */
  width: -moz-calc(#{$percentage} - #{$number});
  /* WebKit */
  width: -webkit-calc(#{$percentage} - #{$number});
  /* Opera */
  width: -o-calc(#{$percentage} - #{$number});
  /* Standard */
  width: calc(#{$percentage} - #{$number});
}

@mixin calc-difference-height($percentage, $number) {
  /* Firefox */
  height: -moz-calc(#{$percentage} - #{$number});
  /* WebKit */
  height: -webkit-calc(#{$percentage} - #{$number});
  /* Opera */
  height: -o-calc(#{$percentage} - #{$number});
  /* Standard */
  height: calc(#{$percentage} - #{$number});
}

@mixin calc-sum-width($percentage, $number) {
  /* Firefox */
  width: -moz-calc(#{$percentage} + #{$number});
  /* WebKit */
  width: -webkit-calc(#{$percentage} + #{$number});
  /* Opera */
  width: -o-calc(#{$percentage} + #{$number});
  /* Standard */
  width: calc(#{$percentage} + #{$number});
}

@mixin calc-sum-height($percentage, $number) {
  /* Firefox */
  height: -moz-calc(#{$percentage} + #{$number});
  /* WebKit */
  height: -webkit-calc(#{$percentage} + #{$number});
  /* Opera */
  height: -o-calc(#{$percentage} + #{$number});
  /* Standard */
  height: calc(#{$percentage} + #{$number});
}

@mixin flex-display() {
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
}

@mixin flex-box(
  $flex-direction,
  $justify-content,
  $align-content,
  $align-items
) {
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  -webkit-flex-direction: #{$flex-direction};
  -ms-flex-direction: #{$flex-direction};
  flex-direction: #{$flex-direction};
  -webkit-flex-wrap: nowrap;
  -ms-flex-wrap: nowrap;
  flex-wrap: nowrap;
  -webkit-justify-content: #{$justify-content};
  -ms-flex-pack: start;
  justify-content: #{$justify-content};
  -webkit-align-content: #{$align-content};
  -ms-flex-line-pack: justify;
  align-content: #{$align-content};
  -webkit-align-items: #{$align-items};
  -ms-flex-align: #{$align-items};
  align-items: #{$align-items};
}

@mixin cover-image($url) {
  background-image: url(#{$url});
  background-repeat: no-repeat;
  background-position: center;
  background-size: cover;
}

@mixin transition($property, $duration, $type) {
  transition: #{$property} #{$duration} #{$type};
  -webkit-transition: #{$property} #{$duration} #{$type};
  -moz-transition: #{$property} #{$duration} #{$type};
  -o-transition: #{$property} #{$duration} #{$type};
}

@mixin is-extra-small-mobile {
  @media (max-width: 600px) {
    @content;
  }
}

@mixin is-mobile {
  // Extra small devices (portrait phones, less than 767px)
  @media (min-width: 601px) and (max-width: 767px) {
    @content;
  }
}

@mixin is-tablet {
  // Medium devices (tablets, 768px and up)
  @media (min-width: 768px) and (max-width: 991px) {
    @content;
  }
}

@mixin is-desktop {
  // Large devices (desktops, 992px and up)
  @media (min-width: 992px) and (max-width: 1199px) {
    @content;
  }
}

@mixin is-large-desktop {
  // Extra large devices (large desktops, 1200px and up)
  @media (min-width: 1200px) and (max-width: 1399px) {
    @content;
  }
}

@mixin is-extra-large-desktop {
  // Extra large devices (large desktops, 1200px and up)
  @media (min-width: 1400px) {
    @content;
  }
}

@mixin fully-clipped-shape($width, $height, $clipped-length) {
  $ratio: $width / $height;

  $horizontal-clipping: (($clipped-length / $width) * 100%);
  $vertical-clipping: calc((100% - #{($clipped-length / $height) * 100%}));

  $vertical-clipping-with-ratio: calc(
    (100% - #{(($clipped-length / $height) / #{$ratio}) * 100%})
  );
  $horizontal-clipping-with-ratio: ($clipped-length / $width) * 100% * $ratio;
  clip-path: polygon(
    $horizontal-clipping 0%,
    $vertical-clipping-with-ratio 0%,
    100% $horizontal-clipping-with-ratio,
    100% $vertical-clipping,
    $vertical-clipping-with-ratio 100%,
    $horizontal-clipping 100%,
    0% $vertical-clipping,
    0% $horizontal-clipping-with-ratio
  );
}

@mixin half-clipped-shape($width, $height, $clipped-length) {
  $ratio: $width / $height;

  $horizontal-clipping: (($clipped-length / $width) * 100%);
  $vertical-clipping: calc((100% - #{($clipped-length / $height) * 100%}));

  $vertical-clipping-with-ratio: calc(
    (100% - #{(($clipped-length / $height) / #{$ratio}) * 100%})
  );
  $horizontal-clipping-with-ratio: ($clipped-length / $width) * 100% * $ratio;
  clip-path: polygon(
    $horizontal-clipping 0%,
    100% 0%,
    100% 0%,
    100% $vertical-clipping,
    $vertical-clipping-with-ratio 100%,
    0% 100%,
    0% 100%,
    0% $horizontal-clipping-with-ratio
  );
}

@mixin header-item-hover-effect($width, $height, $opacity) {
  content: "";
  width: $width;
  height: $height;
  opacity: $opacity;
  background-color: $accent;
  position: absolute;
  bottom: 0;
  transition: all $transition-time ease;
  transform: translateX(0%) translateY(5px);
}

@mixin initializePageStyle {
  height: max-content;
  margin-top: -$header-height;
  min-height: calc(100vh - #{$footer-height});
  @include is-extra-small-mobile {
    margin-top: -$header-height-mobile;
    min-height: calc(100vh - #{$footer-height-mobile});
  }
  .container {
    max-width: 80%;
  }
}

@mixin set-half-clipped-shape-for-input(
  $extra-small-mobile,
  $mobile,
  $tablet,
  $desktop,
  $large-desktop,
  $extra-large-desktop
) {
  @include is-extra-small-mobile {
    @include half-clipped-shape(
      map-get($extra-small-mobile, clipped-shape-width),
      map-get($extra-small-mobile, clipped-shape-height),
      map-get($extra-small-mobile, clipped-length)
    );
  }
  @include is-mobile {
    @include half-clipped-shape(
      map-get($mobile, clipped-shape-width),
      map-get($mobile, clipped-shape-height),
      map-get($mobile, clipped-length)
    );
  }
  @include is-tablet {
    @include half-clipped-shape(
      map-get($tablet, clipped-shape-width),
      map-get($tablet, clipped-shape-height),
      map-get($tablet, clipped-length)
    );
  }
  @include is-desktop {
    @include half-clipped-shape(
      map-get($desktop, clipped-shape-width),
      map-get($desktop, clipped-shape-height),
      map-get($desktop, clipped-length)
    );
  }
  @include is-large-desktop {
    @include half-clipped-shape(
      map-get($large-desktop, clipped-shape-width),
      map-get($large-desktop, clipped-shape-height),
      map-get($large-desktop, clipped-length)
    );
  }
  @include is-extra-large-desktop {
    @include half-clipped-shape(
      map-get($extra-large-desktop, clipped-shape-width),
      map-get($extra-large-desktop, clipped-shape-height),
      map-get($extra-large-desktop, clipped-length)
    );
  }
}

@mixin generateTextAnimation($time, $delay, $offset, $i, $animation) {
  animation: $animation;
  animation-duration: $time;
  animation-delay: $i * $delay + $offset;
  animation-timing-function: cubic-bezier(0.4, 0.3, 0.5, 1);
}

@mixin is-1600-or-less {
  // Extra large devices (large desktops, 1200px and up)
  @media (max-width: 1600px) {
    @content;
  }
}
@mixin is-large-desktop-or-less {
  // Extra large devices (large desktops, 1200px and up)
  @media (max-width: 1400px) {
    @content;
  }
}
@mixin is-desktop-or-less {
  // Extra large devices (large desktops, 1200px and up)
  @media (max-width: 1200px) {
    @content;
  }
}
@mixin is-767px-or-less {
  // Extra large devices (large desktops, 1200px and up)
  @media (max-width: 767px) {
    @content;
  }
}
